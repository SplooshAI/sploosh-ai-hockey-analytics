name: Main Branch Merge

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  version-bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Dependencies
        run: |
          npm install
          cd apps/sploosh-ai-hockey-analytics
          npm install
          cd ../..
          
      - name: Determine Version Bump Type
        id: bump-type
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1)
          echo "Commit message: $COMMIT_MSG"
          
          if [[ $COMMIT_MSG =~ ^feat!: ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ $COMMIT_MSG =~ ^feat: ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Version Bump Branch
        id: create_branch
        run: |
          # Configure git
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
          echo "Current directory:"
          pwd
          ls -la
          
          # Create new branch
          BRANCH_NAME="version-bump-${{ github.sha }}"
          git checkout -b $BRANCH_NAME
          
          # Store original versions
          OLD_VERSION=$(node -p "require('./package.json').version")
          echo "Old version: $OLD_VERSION"
          
          # Determine new version
          BUMP_TYPE=${{ steps.bump-type.outputs.type }}
          echo "Bump type: $BUMP_TYPE"
          
          # Use npm version to calculate new version number only
          NEW_VERSION=$(npm version $BUMP_TYPE --no-git-tag-version)
          # Reset any changes npm version made
          git reset --hard HEAD
          
          echo "New version: $NEW_VERSION"
          
          # Manually update package.json files
          jq ".version = \"${NEW_VERSION#v}\"" package.json > temp.json && mv temp.json package.json
          cd apps/sploosh-ai-hockey-analytics
          jq ".version = \"${NEW_VERSION#v}\"" package.json > temp.json && mv temp.json package.json
          cd ../..
          
          echo "Updated package.json versions:"
          cat package.json | grep version
          cat apps/sploosh-ai-hockey-analytics/package.json | grep version
          
          # Stage only package.json files
          git add package.json apps/sploosh-ai-hockey-analytics/package.json
          git commit -m "chore: bump version from ${OLD_VERSION} to ${NEW_VERSION#v}"
          
          # Force push branch
          git push -f origin $BRANCH_NAME
          
          echo "new_version=${NEW_VERSION#v}" >> $GITHUB_OUTPUT
          echo "old_version=${OLD_VERSION}" >> $GITHUB_OUTPUT
          echo "branch_name=${BRANCH_NAME}" >> $GITHUB_OUTPUT
      
      - name: Create Pull Request
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ steps.create_branch.outputs.branch_name }}
          base: main
          delete-branch: true
          title: "chore: bump version from ${{ steps.create_branch.outputs.old_version }} to ${{ steps.create_branch.outputs.new_version }}"
          body: |
            Automated version bump triggered by merge to main.
            
            Changes:
            - Bump version from ${{ steps.create_branch.outputs.old_version }} to ${{ steps.create_branch.outputs.new_version }}
            - Update version in root package.json
            - Update version in app package.json 