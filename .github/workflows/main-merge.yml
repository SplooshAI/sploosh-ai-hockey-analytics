name: Main Branch Merge

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  version-bump:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Dependencies
        run: |
          npm install
          cd apps/sploosh-ai-hockey-analytics
          npm install
          cd ../..
          
      - name: Determine Version Bump Type
        id: bump-type
        run: |
          COMMIT_MSG=$(git log --format=%B -n 1)
          echo "Commit message: $COMMIT_MSG"
          
          if [[ $COMMIT_MSG =~ ^feat!: ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ $COMMIT_MSG =~ ^feat: ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Version Bump Branch
        id: create_branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Create new branch
          BRANCH_NAME="version-bump-${{ github.sha }}"
          git checkout -b $BRANCH_NAME
          
          # Bump versions
          BUMP_TYPE=${{ steps.bump-type.outputs.type }}
          npm version $BUMP_TYPE --no-git-tag-version
          
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          cd apps/sploosh-ai-hockey-analytics
          npm version $NEW_VERSION --no-git-tag-version
          cd ../..
          
          # Verify changes exist
          if [[ -n $(git status -s) ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            
            # Commit changes
            git add .
            git commit -m "chore: bump version to $NEW_VERSION"
            git push origin $BRANCH_NAME
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Pull Request
        if: steps.create_branch.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: bump version to ${{ steps.create_branch.outputs.new_version }}"
          title: "chore: version bump to ${{ steps.create_branch.outputs.new_version }}"
          body: |
            Automated version bump triggered by merge to main.
            
            Changes:
            - Bump version from ${{ steps.create_branch.outputs.old_version }} to ${{ steps.create_branch.outputs.new_version }}
            - Sync versions across package.json files
          branch: version-bump-${{ github.sha }}
          base: main
          labels: |
            version-bump
            automated 