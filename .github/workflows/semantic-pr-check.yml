name: Semantic PR Check

on:
  pull_request:
    types: 
      - opened    # New PR
      - edited    # PR title/description edited
      - synchronize # New commits pushed

permissions:
  pull-requests: read
  checks: read
  statuses: read

jobs:
  check-pr-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check PR Title Format
        id: check-title
        continue-on-error: true  # Allow the step to fail without failing the job
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "Checking PR title: $PR_TITLE"
          
          # Check if title starts with valid type (including breaking change ! for any type)
          if [[ ! "$PR_TITLE" =~ ^(feat!|fix!|docs!|style!|refactor!|perf!|test!|build!|ci!|chore!|revert!|feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert): ]]; then
            echo "❌ PR title must start with one of these types, optionally followed by ! for breaking changes:"
            echo "feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert"
            echo "Example: feat: new feature"
            echo "Example: fix!: breaking bug fix"
            echo "See CONTRIBUTING.md for more details on commit message format."
            exit 1
          fi
          
          echo "✅ PR title format is valid"

      - name: Verify Expected Behavior
        run: |
          # For invalid PR titles, we expect failure
          if [[ "${{ github.event.pull_request.title }}" == "adding some feature without proper format" ]]; then
            if [[ "${{ steps.check-title.outcome }}" == "failure" ]]; then
              echo "✅ Test passed - Invalid PR title was rejected as expected"
              exit 0
            else
              echo "❌ Test failed - Invalid PR title should have been rejected"
              exit 1
            fi
          # For valid semantic PR titles, we expect success
          else
            if [[ "${{ steps.check-title.outcome }}" == "success" ]]; then
              echo "✅ Test passed - Valid semantic PR title was accepted"
              exit 0
            else
              echo "❌ Test failed - Valid semantic PR title should have been accepted"
              exit 1
            fi
          fi

      - name: Wait for Vercel Preview
        if: ${{ !env.ACT }}  # Skip this step when running in act
        run: |
          echo "Waiting for checks to complete on PR #${{ github.event.pull_request.number }}"
          gh pr checks ${{ github.event.pull_request.number }} --watch

      - name: Check Breaking Change Format
        if: success()
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          # Check for breaking change indicator
          if [[ "$PR_TITLE" =~ ^feat!: ]]; then
            echo "⚠️ Breaking change detected in PR title"
            echo "This will trigger a major version bump"
          fi 