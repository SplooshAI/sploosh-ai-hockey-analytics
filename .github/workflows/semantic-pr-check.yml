name: Semantic PR Check

on:
  pull_request:
    types: 
      - opened    # New PR
      - edited    # PR title/description edited

permissions:
  pull-requests: read

jobs:
  check-pr-format:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR Title Format
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "Checking PR title: $PR_TITLE"
          
          # Check if title starts with valid type (including breaking change ! for any type)
          if [[ ! "$PR_TITLE" =~ ^(feat!|fix!|docs!|style!|refactor!|perf!|test!|build!|ci!|chore!|revert!|feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert): ]]; then
            echo "❌ PR title must start with one of these types, optionally followed by ! for breaking changes:"
            echo "feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert"
            echo "Example: feat: new feature"
            echo "Example: fix!: breaking bug fix"
            echo "See CONTRIBUTING.md for more details on commit message format."
            exit 1
          fi
          
          echo "✅ PR title format is valid"

      - name: Check Breaking Change Format
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          # Check for breaking change indicator
          if [[ "$PR_TITLE" =~ ^feat!: ]]; then
            echo "⚠️ Breaking change detected in PR title"
            echo "This will trigger a major version bump"
          fi 